{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "claimVerifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimVerifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200134738038062001347833981016040819052620000349162000207565b80848481600090805190602001906200004f92919062000094565b5080516200006590600190602084019062000094565b5050506001600160a01b031660805281516200008990600790602085019062000094565b5050505050620002f6565b828054620000a290620002ba565b90600052602060002090601f016020900481019282620000c6576000855562000111565b82601f10620000e157805160ff191683800117855562000111565b8280016001018555821562000111579182015b8281111562000111578251825591602001919060010190620000f4565b506200011f92915062000123565b5090565b5b808211156200011f576000815560010162000124565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016257600080fd5b81516001600160401b03808211156200017f576200017f6200013a565b604051601f8301601f19908116603f01168101908282118183101715620001aa57620001aa6200013a565b81604052838152602092508683858801011115620001c757600080fd5b600091505b83821015620001eb5785820183015181830184015290820190620001cc565b83821115620001fd5760008385830101525b9695505050505050565b600080600080608085870312156200021e57600080fd5b84516001600160401b03808211156200023657600080fd5b620002448883890162000150565b955060208701519150808211156200025b57600080fd5b620002698883890162000150565b945060408701519150808211156200028057600080fd5b506200028f8782880162000150565b606087015190935090506001600160a01b0381168114620002af57600080fd5b939692955090935050565b600181811c90821680620002cf57607f821691505b602082108103620002f057634e487b7160e01b600052602260045260246000fd5b50919050565b60805161102e620003196000396000818161025301526104a4015261102e6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a93539d011610071578063a93539d01461024e578063affed0e014610275578063b88d4fde1461027e578063c87b56dd14610291578063e985e9c5146102a457600080fd5b806370a08231146101ef57806373b2e80e1461021057806395d89b4114610233578063a22cb4651461023b57600080fd5b80631e83409a116100de5780631e83409a146101a357806323b872dd146101b657806342842e0e146101c95780636352211e146101dc57600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b31461018e575b600080fd5b61012361011e366004610c54565b6102d2565b60405190151581526020015b60405180910390f35b610140610324565b60405161012f9190610c78565b61017661015b366004610ccd565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b6101a161019c366004610cfd565b6103b2565b005b6101a16101b1366004610d27565b610499565b6101a16101c4366004610d42565b61052d565b6101a16101d7366004610d42565b6106f4565b6101766101ea366004610ccd565b6107ec565b6102026101fd366004610d27565b610843565b60405190815260200161012f565b61012361021e366004610d27565b60066020526000908152604090205460ff1681565b6101406108a6565b6101a1610249366004610d7e565b6108b3565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b61020260085481565b6101a161028c366004610dba565b61091f565b61014061029f366004610ccd565b610a07565b6101236102b2366004610e55565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061030357506380ac58cd60e01b6001600160e01b03198316145b8061031e5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461033190610e88565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90610e88565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806103fb57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61043d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105215760405162461bcd60e51b815260206004820152602760248201527f436c61696d4d616e616765723a2073656e646572206e6f7420636c61696d207660448201526632b934b334b2b960c91b6064820152608401610434565b61052a81610a85565b50565b6000818152600260205260409020546001600160a01b038481169116146105835760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610434565b6001600160a01b0382166105cd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610434565b336001600160a01b038416148061060757506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061062857506000818152600460205260409020546001600160a01b031633145b6106655760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610434565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106ff83838361052d565b6001600160a01b0382163b15806107a85750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610ec2565b6001600160e01b031916145b6107e75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610434565b505050565b6000818152600260205260409020546001600160a01b03168061083e5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610434565b919050565b60006001600160a01b03821661088a5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610434565b506001600160a01b031660009081526003602052604090205490565b6001805461033190610e88565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61092a85858561052d565b6001600160a01b0384163b15806109c15750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906109729033908a90899089908990600401610edf565b6020604051808303816000875af1158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b59190610ec2565b6001600160e01b031916145b610a005760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610434565b5050505050565b6000818152600260205260409020546060906001600160a01b0316610a5b5760405162461bcd60e51b815260206004820152600a6024820152691393d50813525395115160b21b6044820152606401610434565b600782604051602001610a6f929190610f33565b6040516020818303038152906040529050919050565b6001600160a01b03811660009081526006602052604090205460ff1615610af85760405162461bcd60e51b815260206004820152602160248201527f436c61696d4d616e616765724d6f636b3a20616c726561647920636c61696d656044820152601960fa1b6064820152608401610434565b6001600160a01b0381166000908152600660205260408120805460ff191660011790556008805461052a92849290610b2f83610fd1565b919050556001600160a01b038216610b7d5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610434565b6000818152600260205260409020546001600160a01b031615610bd35760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610434565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461052a57600080fd5b600060208284031215610c6657600080fd5b8135610c7181610c3e565b9392505050565b600060208083528351808285015260005b81811015610ca557858101830151858201604001528201610c89565b81811115610cb7576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610cdf57600080fd5b5035919050565b80356001600160a01b038116811461083e57600080fd5b60008060408385031215610d1057600080fd5b610d1983610ce6565b946020939093013593505050565b600060208284031215610d3957600080fd5b610c7182610ce6565b600080600060608486031215610d5757600080fd5b610d6084610ce6565b9250610d6e60208501610ce6565b9150604084013590509250925092565b60008060408385031215610d9157600080fd5b610d9a83610ce6565b915060208301358015158114610daf57600080fd5b809150509250929050565b600080600080600060808688031215610dd257600080fd5b610ddb86610ce6565b9450610de960208701610ce6565b935060408601359250606086013567ffffffffffffffff80821115610e0d57600080fd5b818801915088601f830112610e2157600080fd5b813581811115610e3057600080fd5b896020828501011115610e4257600080fd5b9699959850939650602001949392505050565b60008060408385031215610e6857600080fd5b610e7183610ce6565b9150610e7f60208401610ce6565b90509250929050565b600181811c90821680610e9c57607f821691505b602082108103610ebc57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610ed457600080fd5b8151610c7181610c3e565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080845481600182811c915080831680610f4f57607f831692505b60208084108203610f6e57634e487b7160e01b86526022600452602486fd5b818015610f825760018114610f9357610fc0565b60ff19861689528489019650610fc0565b60008b81526020902060005b86811015610fb85781548b820152908501908301610f9f565b505084890196505b509785525050509301949350505050565b600060018201610ff157634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212203a1c3a1a181db87fc3d55690efb0484aa23f816da542c5150f5173ab7e8f679664736f6c634300080d0033",
    "sourceMap": "253:1307:6:-:0;;;715:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;887:13;860:4;866:6;2224:5:3;2217:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2239:16:3;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;;;;;;;587:30:5;;;912:18:6;;::::2;::::0;:8:::2;::::0;:18:::2;::::0;::::2;::::0;::::2;:::i;:::-;;715:222:::0;;;;253:1307;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;253:1307:6;;;-1:-1:-1;253:1307:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:9;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:9;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:9:o;1036:934::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1284:16;;-1:-1:-1;;;;;1349:14:9;;;1346:34;;;1376:1;1373;1366:12;1346:34;1399:61;1452:7;1443:6;1432:9;1428:22;1399:61;:::i;:::-;1389:71;;1506:2;1495:9;1491:18;1485:25;1469:41;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:63;1629:7;1618:8;1607:9;1603:24;1574:63;:::i;:::-;1564:73;;1683:2;1672:9;1668:18;1662:25;1646:41;;1712:2;1702:8;1699:16;1696:36;;;1728:1;1725;1718:12;1696:36;;1751:63;1806:7;1795:8;1784:9;1780:24;1751:63;:::i;:::-;1857:2;1842:18;;1836:25;1741:73;;-1:-1:-1;1836:25:9;-1:-1:-1;;;;;;1890:31:9;;1880:42;;1870:70;;1936:1;1933;1926:12;1870:70;1036:934;;;;-1:-1:-1;1036:934:9;;-1:-1:-1;;1036:934:9:o;1975:380::-;2054:1;2050:12;;;;2097;;;2118:61;;2172:4;2164:6;2160:17;2150:27;;2118:61;2225:2;2217:6;2214:14;2194:18;2191:38;2188:161;;2271:10;2266:3;2262:20;2259:1;2252:31;2306:4;2303:1;2296:15;2334:4;2331:1;2324:15;2188:161;;1975:380;;;:::o;:::-;253:1307:6;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "253:1307:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4711:335:3;;;;;;:::i;:::-;;:::i;:::-;;;565:14:9;;558:22;540:41;;528:2;513:18;4711:335:3;;;;;;;;896:18;;;:::i;:::-;;;;;;;:::i;1841:46::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1841:46:3;;;;;;-1:-1:-1;;;;;1543:32:9;;;1525:51;;1513:2;1498:18;1841:46:3;1379:203:9;2450:282:3;;;;;;:::i;:::-;;:::i;:::-;;786:162:5;;;;;;:::i;:::-;;:::i;2947:741:3:-;;;;;;:::i;:::-;;:::i;3694:396::-;;;;;;:::i;:::-;;:::i;1324:149::-;;;;;;:::i;:::-;;:::i;1479:168::-;;;;;;:::i;:::-;;:::i;:::-;;;2694:25:9;;;2682:2;2667:18;1479:168:3;2548:177:9;463:42:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;921:20:3;;;:::i;2738:203::-;;;;;;:::i;:::-;;:::i;349:38:5:-;;;;;542:20:6;;;;;;4096:427:3;;;;;;:::i;:::-;;:::i;943:241:6:-;;;;;;:::i;:::-;;:::i;1894:68:3:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4711:335;4787:4;-1:-1:-1;;;;;;;;;4822:25:3;;;;:100;;-1:-1:-1;;;;;;;;;;4897:25:3;;;4822:100;:175;;;-1:-1:-1;;;;;;;;;;4972:25:3;;;4822:175;4803:194;4711:335;-1:-1:-1;;4711:335:3:o;896:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2450:282::-;2521:13;2537:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2537:12:3;2568:10;:19;;;:58;;-1:-1:-1;;;;;;2591:23:3;;;;;;:16;:23;;;;;;;;2615:10;2591:35;;;;;;;;;;2568:58;2560:85;;;;-1:-1:-1;;;2560:85:3;;4747:2:9;2560:85:3;;;4729:21:9;4786:2;4766:18;;;4759:30;-1:-1:-1;;;4805:18:9;;;4798:44;4859:18;;2560:85:3;;;;;;;;;2656:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2656:25:3;-1:-1:-1;;;;;2656:25:3;;;;;;;;;2697:28;;2656:15;;2697:28;;;;;;;2511:221;2450:282;;:::o;786:162:5:-;845:10;-1:-1:-1;;;;;859:13:5;845:27;;837:79;;;;-1:-1:-1;;;837:79:5;;5090:2:9;837:79:5;;;5072:21:9;5129:2;5109:18;;;5102:30;5168:34;5148:18;;;5141:62;-1:-1:-1;;;5219:18:9;;;5212:37;5266:19;;837:79:5;4888:403:9;837:79:5;926:15;933:7;926:6;:15::i;:::-;786:162;:::o;2947:741:3:-;3078:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3070:20:3;;;3078:12;;3070:20;3062:43;;;;-1:-1:-1;;;3062:43:3;;5498:2:9;3062:43:3;;;5480:21:9;5537:2;5517:18;;;5510:30;-1:-1:-1;;;5556:18:9;;;5549:40;5606:18;;3062:43:3;5296:334:9;3062:43:3;-1:-1:-1;;;;;3124:16:3;;3116:46;;;;-1:-1:-1;;;3116:46:3;;5837:2:9;3116:46:3;;;5819:21:9;5876:2;5856:18;;;5849:30;-1:-1:-1;;;5895:18:9;;;5888:47;5952:18;;3116:46:3;5635:341:9;3116:46:3;3194:10;-1:-1:-1;;;;;3194:18:3;;;;:56;;-1:-1:-1;;;;;;3216:22:3;;;;;;:16;:22;;;;;;;;3239:10;3216:34;;;;;;;;;;3194:56;:89;;;-1:-1:-1;3268:15:3;;;;:11;:15;;;;;;-1:-1:-1;;;;;3268:15:3;3254:10;:29;3194:89;3173:150;;;;-1:-1:-1;;;3173:150:3;;4747:2:9;3173:150:3;;;4729:21:9;4786:2;4766:18;;;4759:30;-1:-1:-1;;;4805:18:9;;;4798:44;4859:18;;3173:150:3;4545:338:9;3173:150:3;-1:-1:-1;;;;;3523:16:3;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3523:18:3;;;3556:14;;;;;;;;;:16;;3523:18;3556:16;;;3593:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3593:17:3;;;;;;;;3628:11;:15;;;;;;3621:22;;;;;;;;3659;;3602:2;;3556:14;3523:16;3659:22;;;2947:741;;;:::o;3694:396::-;3813:26;3826:4;3832:2;3836;3813:12;:26::i;:::-;-1:-1:-1;;;;;3871:14:3;;;:19;;:170;;-1:-1:-1;3910:66:3;;-1:-1:-1;;;3910:66:3;;;3951:10;3910:66;;;6286:34:9;-1:-1:-1;;;;;6356:15:9;;;6336:18;;;6329:43;6388:18;;;6381:34;;;6451:3;6431:18;;;6424:31;-1:-1:-1;6471:19:9;;;6464:30;3996:45:3;;3910:40;;;;3996:45;;6511:19:9;;3910:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3910:131:3;;3871:170;3850:233;;;;-1:-1:-1;;;3850:233:3;;6997:2:9;3850:233:3;;;6979:21:9;7036:2;7016:18;;;7009:30;-1:-1:-1;;;7055:18:9;;;7048:46;7111:18;;3850:233:3;6795:340:9;3850:233:3;3694:396;;;:::o;1324:149::-;1382:13;1424:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1424:12:3;;1407:59;;;;-1:-1:-1;;;1407:59:3;;7342:2:9;1407:59:3;;;7324:21:9;7381:2;7361:18;;;7354:30;-1:-1:-1;;;7400:18:9;;;7393:40;7450:18;;1407:59:3;7140:334:9;1407:59:3;1324:149;;;:::o;1479:168::-;1542:7;-1:-1:-1;;;;;1569:19:3;;1561:44;;;;-1:-1:-1;;;1561:44:3;;7681:2:9;1561:44:3;;;7663:21:9;7720:2;7700:18;;;7693:30;-1:-1:-1;;;7739:18:9;;;7732:42;7791:18;;1561:44:3;7479:336:9;1561:44:3;-1:-1:-1;;;;;;1623:17:3;;;;;:10;:17;;;;;;;1479:168::o;921:20::-;;;;;;;:::i;2738:203::-;2840:10;2823:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2823:38:3;;;;;;;;;;;;:49;;-1:-1:-1;;2823:49:3;;;;;;;;;;2888:46;;540:41:9;;;2823:38:3;;2840:10;2888:46;;513:18:9;2888:46:3;;;;;;;2738:203;;:::o;4096:427::-;4244:26;4257:4;4263:2;4267;4244:12;:26::i;:::-;-1:-1:-1;;;;;4302:14:3;;;:19;;:172;;-1:-1:-1;4341:68:3;;-1:-1:-1;;;4341:68:3;;;4429:45;-1:-1:-1;;;;;4341:40:3;;;4429:45;;4341:68;;4382:10;;4394:4;;4400:2;;4404:4;;;;4341:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4341:133:3;;4302:172;4281:235;;;;-1:-1:-1;;;4281:235:3;;6997:2:9;4281:235:3;;;6979:21:9;7036:2;7016:18;;;7009:30;-1:-1:-1;;;7055:18:9;;;7048:46;7111:18;;4281:235:3;6795:340:9;4281:235:3;4096:427;;;;;:::o;943:241:6:-;1104:1;1080:12;;;:8;:12;;;;;;1043:13;;-1:-1:-1;;;;;1080:12:6;1072:49;;;;-1:-1:-1;;;1072:49:6;;8689:2:9;1072:49:6;;;8671:21:9;8728:2;8708:18;;;8701:30;-1:-1:-1;;;8747:18:9;;;8740:40;8797:18;;1072:49:6;8487:334:9;1072:49:6;1163:8;1173:2;1146:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1132:45;;943:241;;;:::o;1339:219::-;-1:-1:-1;;;;;1423:19:6;;;;;;:10;:19;;;;;;;;1422:20;1414:66;;;;-1:-1:-1;;;1414:66:6;;10323:2:9;1414:66:6;;;10305:21:9;10362:2;10342:18;;;10335:30;10401:34;10381:18;;;10374:62;-1:-1:-1;;;10452:18:9;;;10445:31;10493:19;;1414:66:6;10121:397:9;1414:66:6;-1:-1:-1;;;;;1491:19:6;;;;;;:10;:19;;;;;:26;;-1:-1:-1;;1491:26:6;1513:4;1491:26;;;1543:5;:7;;1528:23;;1502:7;;1543:5;:7;;;:::i;:::-;;;;;-1:-1:-1;;;;;5314:16:3;;5306:46;;;;-1:-1:-1;;;5306:46:3;;5837:2:9;5306:46:3;;;5819:21:9;5876:2;5856:18;;;5849:30;-1:-1:-1;;;5895:18:9;;;5888:47;5952:18;;5306:46:3;5635:341:9;5306:46:3;5395:1;5371:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5371:12:3;:26;5363:53;;;;-1:-1:-1;;;5363:53:3;;10962:2:9;5363:53:3;;;10944:21:9;11001:2;10981:18;;;10974:30;-1:-1:-1;;;11020:18:9;;;11013:44;11074:18;;5363:53:3;10760:338:9;5363:53:3;-1:-1:-1;;;;;5506:14:3;;;;;;:10;:14;;;;;;;;:16;;;;;;5543:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5543:17:3;;;;;5576:28;5552:2;;5506:14;;5576:28;;5506:14;;5576:28;5240:371;;:::o;14:131:9:-;-1:-1:-1;;;;;;88:32:9;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:9:o;592:597::-;704:4;733:2;762;751:9;744:21;794:6;788:13;837:6;832:2;821:9;817:18;810:34;862:1;872:140;886:6;883:1;880:13;872:140;;;981:14;;;977:23;;971:30;947:17;;;966:2;943:26;936:66;901:10;;872:140;;;1030:6;1027:1;1024:13;1021:91;;;1100:1;1095:2;1086:6;1075:9;1071:22;1067:31;1060:42;1021:91;-1:-1:-1;1173:2:9;1152:15;-1:-1:-1;;1148:29:9;1133:45;;;;1180:2;1129:54;;592:597;-1:-1:-1;;;592:597:9:o;1194:180::-;1253:6;1306:2;1294:9;1285:7;1281:23;1277:32;1274:52;;;1322:1;1319;1312:12;1274:52;-1:-1:-1;1345:23:9;;1194:180;-1:-1:-1;1194:180:9:o;1587:173::-;1655:20;;-1:-1:-1;;;;;1704:31:9;;1694:42;;1684:70;;1750:1;1747;1740:12;1765:254;1833:6;1841;1894:2;1882:9;1873:7;1869:23;1865:32;1862:52;;;1910:1;1907;1900:12;1862:52;1933:29;1952:9;1933:29;:::i;:::-;1923:39;2009:2;1994:18;;;;1981:32;;-1:-1:-1;;;1765:254:9:o;2024:186::-;2083:6;2136:2;2124:9;2115:7;2111:23;2107:32;2104:52;;;2152:1;2149;2142:12;2104:52;2175:29;2194:9;2175:29;:::i;2215:328::-;2292:6;2300;2308;2361:2;2349:9;2340:7;2336:23;2332:32;2329:52;;;2377:1;2374;2367:12;2329:52;2400:29;2419:9;2400:29;:::i;:::-;2390:39;;2448:38;2482:2;2471:9;2467:18;2448:38;:::i;:::-;2438:48;;2533:2;2522:9;2518:18;2505:32;2495:42;;2215:328;;;;;:::o;2730:347::-;2795:6;2803;2856:2;2844:9;2835:7;2831:23;2827:32;2824:52;;;2872:1;2869;2862:12;2824:52;2895:29;2914:9;2895:29;:::i;:::-;2885:39;;2974:2;2963:9;2959:18;2946:32;3021:5;3014:13;3007:21;3000:5;2997:32;2987:60;;3043:1;3040;3033:12;2987:60;3066:5;3056:15;;;2730:347;;;;;:::o;3082:808::-;3179:6;3187;3195;3203;3211;3264:3;3252:9;3243:7;3239:23;3235:33;3232:53;;;3281:1;3278;3271:12;3232:53;3304:29;3323:9;3304:29;:::i;:::-;3294:39;;3352:38;3386:2;3375:9;3371:18;3352:38;:::i;:::-;3342:48;;3437:2;3426:9;3422:18;3409:32;3399:42;;3492:2;3481:9;3477:18;3464:32;3515:18;3556:2;3548:6;3545:14;3542:34;;;3572:1;3569;3562:12;3542:34;3610:6;3599:9;3595:22;3585:32;;3655:7;3648:4;3644:2;3640:13;3636:27;3626:55;;3677:1;3674;3667:12;3626:55;3717:2;3704:16;3743:2;3735:6;3732:14;3729:34;;;3759:1;3756;3749:12;3729:34;3804:7;3799:2;3790:6;3786:2;3782:15;3778:24;3775:37;3772:57;;;3825:1;3822;3815:12;3772:57;3082:808;;;;-1:-1:-1;3082:808:9;;-1:-1:-1;3856:2:9;3848:11;;3878:6;3082:808;-1:-1:-1;;;3082:808:9:o;3895:260::-;3963:6;3971;4024:2;4012:9;4003:7;3999:23;3995:32;3992:52;;;4040:1;4037;4030:12;3992:52;4063:29;4082:9;4063:29;:::i;:::-;4053:39;;4111:38;4145:2;4134:9;4130:18;4111:38;:::i;:::-;4101:48;;3895:260;;;;;:::o;4160:380::-;4239:1;4235:12;;;;4282;;;4303:61;;4357:4;4349:6;4345:17;4335:27;;4303:61;4410:2;4402:6;4399:14;4379:18;4376:38;4373:161;;4456:10;4451:3;4447:20;4444:1;4437:31;4491:4;4488:1;4481:15;4519:4;4516:1;4509:15;4373:161;;4160:380;;;:::o;6541:249::-;6610:6;6663:2;6651:9;6642:7;6638:23;6634:32;6631:52;;;6679:1;6676;6669:12;6631:52;6711:9;6705:16;6730:30;6754:5;6730:30;:::i;7820:662::-;-1:-1:-1;;;;;8099:15:9;;;8081:34;;8151:15;;8146:2;8131:18;;8124:43;8198:2;8183:18;;8176:34;;;8246:3;8241:2;8226:18;;8219:31;;;8266:19;;8259:35;;;8024:4;8287:6;8337;8061:3;8316:19;;8303:49;8402:1;8396:3;8387:6;8376:9;8372:22;8368:32;8361:43;8472:3;8465:2;8461:7;8456:2;8448:6;8444:15;8440:29;8429:9;8425:45;8421:55;8413:63;;7820:662;;;;;;;;:::o;8952:1164::-;9108:3;9137:1;9170:6;9164:13;9200:3;9222:1;9250:9;9246:2;9242:18;9232:28;;9310:2;9299:9;9295:18;9332;9322:61;;9376:4;9368:6;9364:17;9354:27;;9322:61;9402:2;9450;9442:6;9439:14;9419:18;9416:38;9413:165;;-1:-1:-1;;;9477:33:9;;9533:4;9530:1;9523:15;9563:4;9484:3;9551:17;9413:165;9594:18;9621:104;;;;9739:1;9734:320;;;;9587:467;;9621:104;-1:-1:-1;;9654:24:9;;9642:37;;9699:16;;;;-1:-1:-1;9621:104:9;;9734:320;8899:1;8892:14;;;8936:4;8923:18;;9829:1;9843:165;9857:6;9854:1;9851:13;9843:165;;;9935:14;;9922:11;;;9915:35;9978:16;;;;9872:10;;9843:165;;;9847:3;;10037:6;10032:3;10028:16;10021:23;;9587:467;-1:-1:-1;10063:19:9;;;-1:-1:-1;;;10098:12:9;;;8952:1164;-1:-1:-1;;;;8952:1164:9:o;10523:232::-;10562:3;10583:17;;;10580:140;;10642:10;10637:3;10633:20;10630:1;10623:31;10677:4;10674:1;10667:15;10705:4;10702:1;10695:15;10580:140;-1:-1:-1;10747:1:9;10736:13;;10523:232::o",
    "linkReferences": {},
    "immutableReferences": {
      "2679": [
        {
          "start": 595,
          "length": 32
        },
        {
          "start": 1188,
          "length": 32
        }
      ]
    }
  },
  "ast": {
    "absolutePath": "/home/hmukhlis/projects/web3-game/contracts/src/ClaimManagerERC721.sol",
    "exportedSymbols": {
      "ClaimManager": [
        2716
      ],
      "ClaimManagerERC721": [
        2819
      ],
      "ERC721": [
        2457
      ],
      "ERC721TokenReceiver": [
        2477
      ]
    },
    "id": 2820,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2718,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/home/hmukhlis/projects/web3-game/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 2719,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 2478,
        "src": "57:35:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hmukhlis/projects/web3-game/contracts/src/ClaimManager.sol",
        "file": "./ClaimManager.sol",
        "id": 2720,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2820,
        "sourceUnit": 2717,
        "src": "93:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2722,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2457,
              "src": "284:6:6"
            },
            "id": 2723,
            "nodeType": "InheritanceSpecifier",
            "src": "284:6:6"
          },
          {
            "baseName": {
              "id": 2724,
              "name": "ClaimManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2716,
              "src": "292:12:6"
            },
            "id": 2725,
            "nodeType": "InheritanceSpecifier",
            "src": "292:12:6"
          }
        ],
        "canonicalName": "ClaimManagerERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2721,
          "nodeType": "StructuredDocumentation",
          "src": "123:130:6",
          "text": "@title ClaimManagerERC721\n@author nutcloud\n@notice basic claim manager example which mints an ERC721 NFT for the claimer"
        },
        "fullyImplemented": true,
        "id": 2819,
        "linearizedBaseContracts": [
          2819,
          2716,
          2457
        ],
        "name": "ClaimManagerERC721",
        "nameLocation": "262:18:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 2726,
              "nodeType": "StructuredDocumentation",
              "src": "311:147:6",
              "text": "-------------------------------------------------------\n\tStorage variables\n-------------------------------------------------------"
            },
            "functionSelector": "73b2e80e",
            "id": 2730,
            "mutability": "mutable",
            "name": "hasClaimed",
            "nameLocation": "495:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "463:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2729,
              "keyType": {
                "id": 2727,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "471:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "463:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2728,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "482:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2732,
            "mutability": "mutable",
            "name": "_baseURI",
            "nameLocation": "527:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "512:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2731,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "512:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "affed0e0",
            "id": 2734,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "557:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 2819,
            "src": "542:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "542:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2757,
              "nodeType": "Block",
              "src": "902:35:6",
              "statements": [
                {
                  "expression": {
                    "id": 2755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2753,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2732,
                      "src": "912:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2754,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2741,
                      "src": "923:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "912:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2756,
                  "nodeType": "ExpressionStatement",
                  "src": "912:18:6"
                }
              ]
            },
            "documentation": {
              "id": 2735,
              "nodeType": "StructuredDocumentation",
              "src": "569:141:6",
              "text": "-------------------------------------------------------\n\tConstructor\n-------------------------------------------------------"
            },
            "id": 2758,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2746,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2737,
                    "src": "860:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2747,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2739,
                    "src": "866:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2748,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2745,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2457,
                  "src": "853:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "853:20:6"
              },
              {
                "arguments": [
                  {
                    "id": 2750,
                    "name": "claimVerifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2743,
                    "src": "887:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2751,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2749,
                  "name": "ClaimManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2716,
                  "src": "874:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "874:27:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "750:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "736:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2739,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "778:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "764:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2738,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2741,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "808:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "794:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2740,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2743,
                  "mutability": "mutable",
                  "name": "claimVerifier",
                  "nameLocation": "833:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "825:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:126:6"
            },
            "returnParameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "902:0:6"
            },
            "scope": 2819,
            "src": "715:222:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1951
            ],
            "body": {
              "id": 2788,
              "nodeType": "Block",
              "src": "1062:122:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2768,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "1080:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 2770,
                          "indexExpression": {
                            "id": 2769,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2760,
                            "src": "1089:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1080:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1104:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1096:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2771,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1096:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1080:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f54204d494e544544",
                        "id": 2776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea5fb14db4dd01b382f370bb7c4f76754b97ba658044e869cf4129e1bfc47e97",
                          "typeString": "literal_string \"NOT MINTED\""
                        },
                        "value": "NOT MINTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea5fb14db4dd01b382f370bb7c4f76754b97ba658044e869cf4129e1bfc47e97",
                          "typeString": "literal_string \"NOT MINTED\""
                        }
                      ],
                      "id": 2767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1072:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2778,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:49:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2783,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2732,
                            "src": "1163:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 2784,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2760,
                            "src": "1173:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2781,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1146:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1146:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:30:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1139:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 2779,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1139:6:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2766,
                  "id": 2787,
                  "nodeType": "Return",
                  "src": "1132:45:6"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 2789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "952:8:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2763,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2762,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2457,
                  "src": "1018:6:6"
                }
              ],
              "src": "1009:16:6"
            },
            "parameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2760,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "969:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2789,
                  "src": "961:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:12:6"
            },
            "returnParameters": {
              "id": 2766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2789,
                  "src": "1043:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:15:6"
            },
            "scope": 2819,
            "src": "943:241:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2715
            ],
            "body": {
              "id": 2817,
              "nodeType": "Block",
              "src": "1404:154:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1422:20:6",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2798,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2730,
                            "src": "1423:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2800,
                          "indexExpression": {
                            "id": 2799,
                            "name": "claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2792,
                            "src": "1434:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1423:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d4d616e616765724d6f636b3a20616c726561647920636c61696d6564",
                        "id": 2802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1444:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ecc286d933ea626c052228617059913e523bb6e3b991828e13ca852225da3db",
                          "typeString": "literal_string \"ClaimManagerMock: already claimed\""
                        },
                        "value": "ClaimManagerMock: already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ecc286d933ea626c052228617059913e523bb6e3b991828e13ca852225da3db",
                          "typeString": "literal_string \"ClaimManagerMock: already claimed\""
                        }
                      ],
                      "id": 2797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1414:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2804,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:66:6"
                },
                {
                  "expression": {
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2805,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2730,
                        "src": "1491:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2807,
                      "indexExpression": {
                        "id": 2806,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "1502:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1491:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1513:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1491:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2810,
                  "nodeType": "ExpressionStatement",
                  "src": "1491:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2812,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "1534:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1543:7:6",
                        "subExpression": {
                          "id": 2813,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2734,
                          "src": "1543:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2811,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2327,
                      "src": "1528:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:23:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:23:6"
                }
              ]
            },
            "documentation": {
              "id": 2790,
              "nodeType": "StructuredDocumentation",
              "src": "1190:144:6",
              "text": "-------------------------------------------------------\n\tClaiming logic\n-------------------------------------------------------"
            },
            "id": 2818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "1348:6:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2795,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2794,
                  "name": "ClaimManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2716,
                  "src": "1390:12:6"
                }
              ],
              "src": "1381:22:6"
            },
            "parameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2792,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1363:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1355:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1354:17:6"
            },
            "returnParameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:6"
            },
            "scope": 2819,
            "src": "1339:219:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2820,
        "src": "253:1307:6",
        "usedErrors": []
      }
    ],
    "src": "32:1529:6"
  }
}