/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClaimManagerERC721,
  ClaimManagerERC721Interface,
} from "../ClaimManagerERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "claimVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200269b3803806200269b833981810160405281019062000037919062000378565b808484816000908051906020019062000052929190620000c6565b5080600190805190602001906200006b929190620000c6565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508160079080519060200190620000bb929190620000c6565b5050505050620004ab565b828054620000d49062000476565b90600052602060002090601f016020900481019282620000f8576000855562000144565b82601f106200011357805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014357825182559160200191906001019062000126565b5b50905062000153919062000157565b5090565b5b808211156200017257600081600090555060010162000158565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001df8262000194565b810181811067ffffffffffffffff82111715620002015762000200620001a5565b5b80604052505050565b60006200021662000176565b9050620002248282620001d4565b919050565b600067ffffffffffffffff821115620002475762000246620001a5565b5b620002528262000194565b9050602081019050919050565b60005b838110156200027f57808201518184015260208101905062000262565b838111156200028f576000848401525b50505050565b6000620002ac620002a68462000229565b6200020a565b905082815260208101848484011115620002cb57620002ca6200018f565b5b620002d88482856200025f565b509392505050565b600082601f830112620002f857620002f76200018a565b5b81516200030a84826020860162000295565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003408262000313565b9050919050565b620003528162000333565b81146200035e57600080fd5b50565b600081519050620003728162000347565b92915050565b6000806000806080858703121562000395576200039462000180565b5b600085015167ffffffffffffffff811115620003b657620003b562000185565b5b620003c487828801620002e0565b945050602085015167ffffffffffffffff811115620003e857620003e762000185565b5b620003f687828801620002e0565b935050604085015167ffffffffffffffff8111156200041a576200041962000185565b5b6200042887828801620002e0565b92505060606200043b8782880162000361565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048f57607f821691505b602082108103620004a557620004a462000447565b5b50919050565b6080516121cd620004ce600039600081816106be0152610f9c01526121cd6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a93539d011610071578063a93539d0146102c8578063affed0e0146102e6578063b88d4fde14610304578063c87b56dd14610320578063e985e9c5146103505761010b565b806370a082311461022e57806373b2e80e1461025e57806395d89b411461028e578063a22cb465146102ac5761010b565b80631e83409a116100de5780631e83409a146101aa57806323b872dd146101c657806342842e0e146101e25780636352211e146101fe5761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a6004803603810190610125919061157b565b610380565b60405161013791906115c3565b60405180910390f35b610148610412565b6040516101559190611677565b60405180910390f35b610178600480360381019061017391906116cf565b6104a0565b604051610185919061173d565b60405180910390f35b6101a860048036038101906101a39190611784565b6104d3565b005b6101c460048036038101906101bf91906117c4565b6106bc565b005b6101e060048036038101906101db91906117f1565b610756565b005b6101fc60048036038101906101f791906117f1565b610b55565b005b610218600480360381019061021391906116cf565b610c8d565b604051610225919061173d565b60405180910390f35b610248600480360381019061024391906117c4565b610d38565b6040516102559190611853565b60405180910390f35b610278600480360381019061027391906117c4565b610def565b60405161028591906115c3565b60405180910390f35b610296610e0f565b6040516102a39190611677565b60405180910390f35b6102c660048036038101906102c1919061189a565b610e9d565b005b6102d0610f9a565b6040516102dd919061173d565b60405180910390f35b6102ee610fbe565b6040516102fb9190611853565b60405180910390f35b61031e6004803603810190610319919061193f565b610fc4565b005b61033a600480360381019061033591906116cf565b611102565b6040516103479190611677565b60405180910390f35b61036a600480360381019061036591906119c7565b6111d0565b60405161037791906115c3565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103db57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040b5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000805461041f90611a36565b80601f016020809104026020016040519081016040528092919081815260200182805461044b90611a36565b80156104985780601f1061046d57610100808354040283529160200191610498565b820191906000526020600020905b81548152906001019060200180831161047b57829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105cb5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611ab3565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074190611b45565b60405180910390fd5b610753816111ff565b50565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90611bb1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90611c1d565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109265750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b8061098f57506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6109ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c590611ab3565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610b60838383610756565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480610c49575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b8152600401610be593929190611c74565b6020604051808303816000875af1158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c289190611cd3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7f90611d4c565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1603610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a90611db8565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f90611e24565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60066020528060005260406000206000915054906101000a900460ff1681565b60018054610e1c90611a36565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4890611a36565b8015610e955780601f10610e6a57610100808354040283529160200191610e95565b820191906000526020600020905b815481529060010190602001808311610e7857829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f8e91906115c3565b60405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b610fcf858585610756565b60008473ffffffffffffffffffffffffffffffffffffffff163b14806110bc575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401611058959493929190611e80565b6020604051808303816000875af1158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b9190611cd3565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6110fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f290611d4c565b60405180910390fd5b5050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90611f1a565b60405180910390fd5b6007826040516020016111ba929190611ffa565b6040516020818303038152906040529050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561128c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128390612094565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061130481600860008154809291906112fb906120e3565b91905055611307565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d90611c1d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f90612177565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61155881611523565b811461156357600080fd5b50565b6000813590506115758161154f565b92915050565b60006020828403121561159157611590611519565b5b600061159f84828501611566565b91505092915050565b60008115159050919050565b6115bd816115a8565b82525050565b60006020820190506115d860008301846115b4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116185780820151818401526020810190506115fd565b83811115611627576000848401525b50505050565b6000601f19601f8301169050919050565b6000611649826115de565b61165381856115e9565b93506116638185602086016115fa565b61166c8161162d565b840191505092915050565b60006020820190508181036000830152611691818461163e565b905092915050565b6000819050919050565b6116ac81611699565b81146116b757600080fd5b50565b6000813590506116c9816116a3565b92915050565b6000602082840312156116e5576116e4611519565b5b60006116f3848285016116ba565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611727826116fc565b9050919050565b6117378161171c565b82525050565b6000602082019050611752600083018461172e565b92915050565b6117618161171c565b811461176c57600080fd5b50565b60008135905061177e81611758565b92915050565b6000806040838503121561179b5761179a611519565b5b60006117a98582860161176f565b92505060206117ba858286016116ba565b9150509250929050565b6000602082840312156117da576117d9611519565b5b60006117e88482850161176f565b91505092915050565b60008060006060848603121561180a57611809611519565b5b60006118188682870161176f565b93505060206118298682870161176f565b925050604061183a868287016116ba565b9150509250925092565b61184d81611699565b82525050565b60006020820190506118686000830184611844565b92915050565b611877816115a8565b811461188257600080fd5b50565b6000813590506118948161186e565b92915050565b600080604083850312156118b1576118b0611519565b5b60006118bf8582860161176f565b92505060206118d085828601611885565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126118ff576118fe6118da565b5b8235905067ffffffffffffffff81111561191c5761191b6118df565b5b602083019150836001820283011115611938576119376118e4565b5b9250929050565b60008060008060006080868803121561195b5761195a611519565b5b60006119698882890161176f565b955050602061197a8882890161176f565b945050604061198b888289016116ba565b935050606086013567ffffffffffffffff8111156119ac576119ab61151e565b5b6119b8888289016118e9565b92509250509295509295909350565b600080604083850312156119de576119dd611519565b5b60006119ec8582860161176f565b92505060206119fd8582860161176f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a4e57607f821691505b602082108103611a6157611a60611a07565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b6000611a9d600e836115e9565b9150611aa882611a67565b602082019050919050565b60006020820190508181036000830152611acc81611a90565b9050919050565b7f436c61696d4d616e616765723a2073656e646572206e6f7420636c61696d207660008201527f6572696669657200000000000000000000000000000000000000000000000000602082015250565b6000611b2f6027836115e9565b9150611b3a82611ad3565b604082019050919050565b60006020820190508181036000830152611b5e81611b22565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000611b9b600a836115e9565b9150611ba682611b65565b602082019050919050565b60006020820190508181036000830152611bca81611b8e565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b6000611c076011836115e9565b9150611c1282611bd1565b602082019050919050565b60006020820190508181036000830152611c3681611bfa565b9050919050565b600082825260208201905092915050565b50565b6000611c5e600083611c3d565b9150611c6982611c4e565b600082019050919050565b6000608082019050611c89600083018661172e565b611c96602083018561172e565b611ca36040830184611844565b8181036060830152611cb481611c51565b9050949350505050565b600081519050611ccd8161154f565b92915050565b600060208284031215611ce957611ce8611519565b5b6000611cf784828501611cbe565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b6000611d366010836115e9565b9150611d4182611d00565b602082019050919050565b60006020820190508181036000830152611d6581611d29565b9050919050565b7f4e4f545f4d494e54454400000000000000000000000000000000000000000000600082015250565b6000611da2600a836115e9565b9150611dad82611d6c565b602082019050919050565b60006020820190508181036000830152611dd181611d95565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b6000611e0e600c836115e9565b9150611e1982611dd8565b602082019050919050565b60006020820190508181036000830152611e3d81611e01565b9050919050565b82818337600083830152505050565b6000611e5f8385611c3d565b9350611e6c838584611e44565b611e758361162d565b840190509392505050565b6000608082019050611e95600083018861172e565b611ea2602083018761172e565b611eaf6040830186611844565b8181036060830152611ec2818486611e53565b90509695505050505050565b7f4e4f54204d494e54454400000000000000000000000000000000000000000000600082015250565b6000611f04600a836115e9565b9150611f0f82611ece565b602082019050919050565b60006020820190508181036000830152611f3381611ef7565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611f6781611a36565b611f718186611f3a565b94506001821660008114611f8c5760018114611f9d57611fd0565b60ff19831686528186019350611fd0565b611fa685611f45565b60005b83811015611fc857815481890152600182019150602081019050611fa9565b838801955050505b50505092915050565b6000819050919050565b611ff4611fef82611699565b611fd9565b82525050565b60006120068285611f5a565b91506120128284611fe3565b6020820191508190509392505050565b7f436c61696d4d616e616765724d6f636b3a20616c726561647920636c61696d6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b600061207e6021836115e9565b915061208982612022565b604082019050919050565b600060208201905081810360008301526120ad81612071565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120ee82611699565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121205761211f6120b4565b5b600182019050919050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b6000612161600e836115e9565b915061216c8261212b565b602082019050919050565b6000602082019050818103600083015261219081612154565b905091905056fea2646970667358221220fafd36e420419e1a146e87fa14a5dc90cc6e8558c573315caeaa47e51af5a2c564736f6c634300080d0033";

type ClaimManagerERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimManagerERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimManagerERC721__factory extends ContractFactory {
  constructor(...args: ClaimManagerERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    baseURI: string,
    claimVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimManagerERC721> {
    return super.deploy(
      name,
      symbol,
      baseURI,
      claimVerifier,
      overrides || {}
    ) as Promise<ClaimManagerERC721>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    baseURI: string,
    claimVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      baseURI,
      claimVerifier,
      overrides || {}
    );
  }
  override attach(address: string): ClaimManagerERC721 {
    return super.attach(address) as ClaimManagerERC721;
  }
  override connect(signer: Signer): ClaimManagerERC721__factory {
    return super.connect(signer) as ClaimManagerERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimManagerERC721Interface {
    return new utils.Interface(_abi) as ClaimManagerERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimManagerERC721 {
    return new Contract(address, _abi, signerOrProvider) as ClaimManagerERC721;
  }
}
